@model ARMSv2.Models.graduation.GraduationListModel
@{
    ViewBag.Title = "Graduation List";
}

<h3 class="blueHeader">
    View Graduation List
</h3>



@using (Html.BeginForm("Lists", "Graduation", null, FormMethod.Post,
        new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div>
            @Html.Raw(Html.UnEncodedValidationSummary())
        </div>

        <div class="form-group col-sm-12">
            @Html.LabelFor(m => m.GraduationCeremonyId, new { @class = "col-md-4 col-sm-4 control-label" })
            <div class="col-md-8 col-sm-8">
                @Html.DropDownWithModelSelectable(m => m.GraduationCeremonyId, Model.CeremonyOptions, Model.ProgramSelectItem.AdministrativeSelectItem.DefaultFirstItem,
            new { @class = "form-control", id = "drpdwn-grad-ceremony" })
            </div>
        </div>

        <div class="form-group col-sm-12">
            @Html.LabelFor(m => m.GraduationDetailId, new { @class = "col-md-4 col-sm-4 control-label" })
            <div class="col-md-8 col-sm-8">
                @Html.DropDownWithModelSelectable(m => m.GraduationDetailId, Model.GradDetailOptions, Model.ProgramSelectItem.AdministrativeSelectItem.DefaultFirstItem,
            new { @class = "form-control drpdwn-ceremony-change", id = "drpdwn-grad-detail" })
            </div>
        </div>

        @Html.EditorFor(m => m.ProgramSelectItem)
        <div class="pull-right">
            @*<input type="submit" value="Save" class="btn saveBtn" />*@
            <button type="submit" class="btn saveBtn">
                Next
                <span class="glyphicon glyphicon-chevron-right"></span>
            </button>
            <input type="button" value="Cancel"
                   onclick="javascript: cancelSubmission('@Url.Action("Index", "Graduation", null)');" class="btn delBtn" />
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        if ($('#drpdwn-grad-ceremony')) {
            $('#drpdwn-grad-ceremony').change(function () {
                onCeremonyChange();
            });
        }

        
        //preparing already loaded data..
        var ceremonyId = '@Model.GraduationCeremonyId';
        var detailId = '@Model.GraduationDetailId';

        if (ceremonyId > 0) {
            retrieveGradCeremonyDetails(ceremonyId, detailId);
        }

    });

    function onCeremonyChange() {
        var ceremonyId = $("#drpdwn-grad-ceremony :selected").val();

        $(".drpdwn-ceremony-change").empty();

        $(".drpdwn-ceremony-change").map(function (i, ele) {
            $(ele).append($('<option></option>').val('@Model.ProgramSelectItem.AdministrativeSelectItem.DefaultFirstItem.Value').html('@Model.ProgramSelectItem.AdministrativeSelectItem.DefaultFirstItem.Text'));
        });

        if (ceremonyId > 0) {
            retrieveGradCeremonyDetails(ceremonyId);
        }
    }

    function retrieveGradCeremonyDetails(ceremonyId, gradDetailId) {

        @*var staffId = '@Model.ProgramSelectItem.AdministrativeSelectItem.StaffId';*@

        var reqUrl = baseUrl + "Api/UtilsApi/CeremonyDetails/" + ceremonyId;

        
        $.get(reqUrl, function (data) {
            //$('.spn-faculty-spinner').hide();
            $.each(data, function (i, detail) {
                $('#drpdwn-grad-detail').append($('<option></option>').val(detail.Value).html(detail.Text));
            });

            if (gradDetailId != undefined) {
                $('#drpdwn-grad-detail').val(gradDetailId);
            }
        });
    }
</script>
