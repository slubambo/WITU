@using System.Globalization
@using System.Activities.Expressions
@using ARMSv2.Core.Model
@using ARMSv2.Utils
@model ARMSv2.Models.Registration.StudentRegModelView

@{
    ViewBag.Title = "Registration - Student Details";
    Html.EnableClientValidation();
}

<div class="alert alert-success well-sm hide" id="dv-delete-course-success">
    <button type="button" class="close" data-dismiss="alert">×</button>
    <span>
        <span class="glyphicon glyphicon-saved"></span>
        <span class="" id="sp-delete-course-success">
            Changes successfully saved.
        </span>
    </span>
</div>

<div class="row">
    <div class="col-md-12" style="line-height:25px">
        <h4 class="maroonHeader">Student Registration Information</h4>
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        @if (Model.StudentPhotoUrl != null)
        {
            <img src="@Model.StudentPhotoUrl" class="img-responsive" style="width: 110px; height: auto; margin:10px auto; border: 1px solid #E9C3CC" />


        }
    </div>
    <div class="col-md-9 row-top" style="line-height:20px">
        <div class="row"><div class="col-xs-3"><p class="detailLabel">NAME:</p></div><div class="col-xs-9"><p> @Model.Student.Person.FullName</p></div></div>
        <div class="row"><div class="col-xs-3"><p class="detailLabel">REG No:</p></div><div class="col-xs-9"><p>@Model.Student.RegistrationNumber</p></div></div>
        <div class="row"><div class="col-xs-3"><p class="detailLabel">FEES No:</p></div><div class="col-xs-9"><p>@Model.Student.StudentNumber</p></div></div>
        <div class="row"><div class="col-xs-3"><p class="detailLabel">PROGRAMME:</p></div><div class="col-xs-9"><p>@Model.Student.Program.ProgramCore.Name</p></div></div>
        <div class="row"><div class="col-xs-3"><p class="detailLabel">Entry Year:</p></div><div class="col-xs-9"><p>@Model.Student.EntryYear</p></div></div>


    </div>
</div>
<br/>
<div class="form-horizontal noborder">
    <div class="fright">
        <input type="button" class="btn saveBtn" value="Exemptions" onclick="location.href = '@Url.Action("StudentExemptionDetails", "Registration", new { id = @Model.Student.Id })'" />
        <input type="button" class="btn saveBtn" value="Credit Transfer" onclick="location.href = '@Url.Action("StudentCreditTransferDetails", "Registration", new { id = @Model.Student.Id })'" />
    </div>

</div>
    <div class="clearfix"></div>


    <input type="hidden" id="studentId" value="@Model.Student.Id" />

    <div>
    </div>
    @{
        int i;
        for (i = 0; i < Model.ProgramDuration; i++)
        {
            <div>
                @Html.ValidationSummary(true)

            </div>

            <div class="form-horizontal tabs bodytext tabs-pilled noborder">
                <ul class="">

                    @for (i = 0; i < Model.ProgramDuration; i++)
                    {
                        <li class="@(Model.Student.CurrentYear == (i + 1) ? "ui-tabs-active ui-state-active" : "") ">
                            <a href="#Year@(i)" role="tab" data-toggle="tab">
                                Year @(i + 1)
                            </a>
                        </li>
                    }

                </ul>

                @for (i = 0; i < Model.ProgramDuration; i++)
                {
                    <div id="Year@(i)" class="bodytext tab-pane nopadding ">
                        <div class="clearfix">
                            <br />
                        </div>

                        <div class="form-horizontal noborder">
                            <h5 class="greyHeader">Semester I</h5>

                            <div class="fright">
                                @if (Model.StudentSemesterRegistrations.Any(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1 && x.StudentStatus != RegistrationStatus.DeletedRegistration && x.StudentStatus != RegistrationStatus.RejectedRegistration))
                                {
                                    <input type="button" onclick="AddSemesterCourse(@Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1).Id)" class="btn AddCourseSemOne" value="Add Course(s)" />
                                }
                                else
                                {
                                    <input type="button" disabled="disabled" class="btn AddCourseSemOne" value="Add Course(s)" />
                                }
                                <input type="button" class="btn DeleteRegCourseSemOne" value="Delete Course(s)" />
                                <input type="button" class="btn ExemptRegCourseSemOne" value="Exempt Course(s)" />
                                <input type="button" class="btn AbsRegCourseSemOne" value="Abs Course(s)" />
                                <input type="button" class="btn AuditRegCourseSemOne" value="Audit Course(s)" />
                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <table class="table coursesRegTableOne">
                                <thead>

                                    <tr>
                                        <th>

                                        </th>
                                        <th>
                                            Course Code
                                        </th>
                                        <th>
                                            Course Name
                                        </th>
                                        <th>
                                            Credit Units
                                        </th>
                                        <th>
                                            Course Type
                                        </th>
                                        <th>
                                            Status
                                        </th>

                                    </tr>

                                </thead>
                                <tbody>
                                    @if (Model.RegisteredCources != null)
                                    {
                                        if (!(Model.StudentSemesterRegistrations.Any(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1)))
                                        {
                                            <tr>
                                                <td><b>No Semester Registration Found</b></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>

                                            </tr>

                                        }
                                        else
                                        {
                                            var semReg = Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1);

                                            if (!(semReg.StudentCourses.Any()))
                                            {
                                                <tr>
                                                    <td><b>No Courses Found</b></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>

                                                </tr>

                                            }
                                            else
                                            {
                                                foreach (var m in Model.RegisteredCources.Where(x => x.SemesterRegistration.Id == semReg.Id))
                                                {
                                                    <tr>
                                                            <td>
                                                                <input class="courseSelectOne" value="@m.Id" type="checkbox" autocomplete="off" />
                                                            </td>
                                                            <td>
                                                                @m.Code

                                                            </td>


                                                            <td>
                                                                @m.Name
                                                            </td>
                                                            <td>
                                                                @m.CreditUnits
                                                            </td>
                                                            <td>
                                                                @if (m.CourseType == CourseType.Core)
                                                                {
                                                                    <p>Core</p>
                                                                }
                                                                @if (m.CourseType == CourseType.Elective)
                                                                {
                                                                    <p>Elective</p>
                                                                }
                                                                @if (m.CourseType == CourseType.Audited)
                                                                {
                                                                    <p>Audited</p>
                                                                }
                                                            </td>
                                                            <td>
                                                                @m.Remark


                                                            </td>

                                                        </tr>
                                                }
                                            }
                                        }


                                    }

                                </tbody>

                            </table>

                            @if (Model.StudentSemesterRegistrations.Any(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1))
                            {
                                <br />
                                <div class="fright">
                                    @if (Model.StudentSemesterRegistrations.Any(x => x.StudentStatus != RegistrationStatus.ApprovedRegistration
                                        && x.StudentStatus != RegistrationStatus.DeletedRegistration
                                        && x.StudentStatus != RegistrationStatus.RejectedRegistration
                                        && x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1))
                                    {
                                        <input type="button" class="btn btn-success" value="Approve Registration" onclick=" approveSemesterReg(@Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1).Id) " />
                                        <input type="button" class="btn btn-danger" value="Reject Registration" />
                                    }

                                    @if (Model.StudentSemesterRegistrations.Any(x => x.StudentStatus == RegistrationStatus.ApprovedRegistration && x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1))
                                    {
                                        <input type="button" disabled="disabled" class="btn btn-success" value="Registration Approved" />
                                        <input type="button" onclick=" deleteSemesterReg(@Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1).Id) " class="btn btn-danger" value="Reject Registration" />
                                    }
                                    @if (Model.StudentSemesterRegistrations.Any(x => x.StudentStatus == RegistrationStatus.DeletedRegistration && x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1))
                                    {
                                        <input type="button" class="btn btn-success" value="Approve Registration" onclick=" approveSemesterReg(@Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 1).Id) " />
                                        <input type="button" disabled="disabled" class="btn btn-danger" value="Registration Rejected" />
                                    }
                                    
                                </div>
                            }
                            else
                            {
                                
                                    
                                <div class="fright">
                                    
                                    <br/>
                                    @if (Model.CurrentSemester != null && Model.CurrentSemester.SemesterSession == 1 && Model.Student.CurrentYear == (i + 1))
                                    {
                                        <input type = "button" class="btn btn-default configureReg" value = "Configure Registration"/>
                                    } 
                                </div>

                                
                            }
                            <br />
                            <br />
                            <br />
                            <h5>Semester II</h5>
                            <br />
                            <div class="fright">
                                @if (Model.StudentSemesterRegistrations.Any(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2 && x.StudentStatus != RegistrationStatus.DeletedRegistration && x.StudentStatus !=  RegistrationStatus.RejectedRegistration))
                                {
                                    <input type="button" class="btn" onclick="AddSemesterCourse(@Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2).Id)" value="Add Course(s)" />
                                }
                                else
                                {
                                    <input type="button" disabled="disabled" class="btn AddCourseSemTwo" value="Add Course(s)" />
                                }
                                <input type="button" class="btn DeleteRegCourseSemTwo" value="Delete Course(s)" />
                                <input type="button" class="btn ExemptRegCourseSemTwo" value="Exempt Course(s)" />
                                <input type="button" class="btn AbsRegCourseSemTwo" value="Abs Course(s)" />
                                <input type="button" class="btn AuditRegCourseSemTwo" value="Audit Course(s)" />
                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <table class="table coursesRegTableTwo">
                                <thead>

                                    <tr>
                                        <th></th>
                                        <th>
                                            Course Code
                                        </th>
                                        <th>
                                            Course Name
                                        </th>
                                        <th>
                                            Credit Units
                                        </th>
                                        <th>
                                            Course Type
                                        </th>
                                        <th>
                                            Remarks
                                        </th>

                                    </tr>

                                </thead>
                                <tbody>
                                    @if (Model.RegisteredCources != null)
                                    {
                                        if (!(Model.StudentSemesterRegistrations.Any(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2)))
                                        {
                                            <tr>
                                                <td><b>No Semester Registration Found</b></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                            </tr>

                                        }
                                        else
                                        {
                                            var semReg = Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2);
                                            
                                            if (!(semReg.StudentCourses.Any()))
                                            {
                                                <tr>
                                                    <td><b>No Courses Found</b></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                </tr>

                                            }
                                            else
                                            {
                                                foreach (var m in Model.RegisteredCources.Where(x => x.SemesterRegistration.Id == semReg.Id))
                                                {
                                                    
                                                        <tr>
                                                            <td>
                                                                <input class="courseSelectTwo" value="@m.Id" type="checkbox" autocomplete="off" />
                                                            </td>
                                                            <td>
                                                                @m.Code

                                                            </td>


                                                            <td>
                                                                @m.Name
                                                            </td>
                                                            <td class="creditUnitVal">
                                                                @m.CreditUnits
                                                            </td>
                                                            <td>

                                                                @if (m.CourseType == CourseType.Core)
                                                                {
                                                                    <p>Core</p>
                                                                }
                                                                @if (m.CourseType == CourseType.Elective)
                                                                {
                                                                    <p>Elective</p>
                                                                }
                                                                @if (m.CourseType == CourseType.Audited)
                                                                {
                                                                    <p>Audited</p>
                                                                }


                                                            </td>
                                                            <td>
                                                                @m.Remark
                                                            </td>
                                                        </tr>

                                                   

                                                }
                                            }
                                        }
                                    }

                                </tbody>
                            </table>

                            @if (Model.StudentSemesterRegistrations.Any(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2))
                            {
                                <br />
                                <div class="fright">
                                    @if (Model.StudentSemesterRegistrations.Any(x => x.StudentStatus ==  RegistrationStatus.PendingRegistration && x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2))
                                    {
                                        <input type="button" class="btn btn-success" value="Approve Registration" onclick="approveSemesterReg(@Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2).Id)" />
                                        <input type="button" class="btn btn-danger" value="Reject Registration" />
                                    }

                                    @if (Model.StudentSemesterRegistrations.Any(x => x.StudentStatus ==  RegistrationStatus.ApprovedRegistration && x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2))
                                    {
                                        <input type="button" disabled="disabled" class="btn btn-success" value="Registration Approved" />
                                        <input type="button" onclick="deleteSemesterReg(@Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2).Id)" class="btn btn-danger" value="Reject Registration" />
                                    }
                                    @if (Model.StudentSemesterRegistrations.Any(x => x.StudentStatus ==  RegistrationStatus.DeletedRegistration && x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2))
                                    {
                                        <input type="button" class="btn btn-success" value="Approve Registration" onclick="approveSemesterReg(@Model.StudentSemesterRegistrations.FirstOrDefault(x => x.SemesterLevel.Level == (i + 1) && x.SemesterLevel.SemesterSession == 2).Id)" />
                                        <input type="button" disabled="disabled" class="btn btn-danger" value="Registration Rejected" />
                                    }
                                </div>
                            }
                            else if (Model.CurrentSemester != null && Model.CurrentSemester.SemesterSession == 2 && Model.Student.CurrentYear == (i + 1))
                            {
                                <br />
                                <div class="fright">
                                    <input type="button" class="btn btn-default configureReg" value="Configure Registration" />
                                </div>

                            }

                            <br />
                            <br />
                            <br />

                        </div>
                    </div>

                }


            </div>


        }
    }
