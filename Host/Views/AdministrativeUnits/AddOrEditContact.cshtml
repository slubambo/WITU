@model ARMSv2.Models.AdminUnits.EditContact

@{
    ViewBag.Title = Model.Id == 0? "Add Contact": "Edit Contact";
    @Scripts.Render("~/bundles/jqueryval")
}
@{ var pageHeading = Model.Id == 0 ? "Add Contact" : "Edit Contact";}
<h2 class="greyHeader">@pageHeading  </h2>
@using (Html.BeginForm("AddOrEditContact", "AdministrativeUnits", FormMethod.Post, new { @class = "form", @id = "add-contact-form" }))
{
   @Html.AntiForgeryToken() 
    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.ContactTypeId, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownWithModelSelectable(m => m.ContactTypeId, Model.ContactTypes, new SelectListItem(){Text = "-- Select Contact Type --", Value = "0"}, new { @class = "form-control addControl chosen-select", id = "drpdwn-contact-type" })
                @Html.ValidationMessageFor(model => model.ContactTypeId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Value, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.Value, new { autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Value)
            </div>
        </div>
        
        
        @Html.HiddenFor(m => m.ContactOwnerAccessLeveId)
        @Html.HiddenFor(m => m.ContactOwnerAccessLevel)
        @Html.HiddenFor(m => m.ContactOwnerId)
        @Html.HiddenFor(m => m.Name)
        @Html.HiddenFor(m => m.Id)

        <div class="form-group">
            <div class="col-md-3"></div>
            <div class="col-md-9">
                @if (Model.Id == 0)
                {
                    <div class="noMarginCol">
                        <input type="submit" value="Create" class="btn saveBtn" />
                        <input type="button" value="Cancel"
                               onclick="javascript: cancelSubmission('@Url.Action("University", "AdministrativeUnits", null)');" class="btn delBtn" />
                    </div>

                    <div class="clearfix"></div>

                    <br />

                }
                else
                {
                    <div class="noMarginCol">
                        <input type="submit" value="Update" class="btn saveBtn" />
                        <input type="button" value="Cancel"
                               onclick="javascript: cancelSubmission('@Url.Action("University", "AdministrativeUnits", null)');" class="btn delBtn" />
                    </div>

                    <div class="clearfix"></div>
                    <br />

                }
            </div>
        </div>
    </div>
}