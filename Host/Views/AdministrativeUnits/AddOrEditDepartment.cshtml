@using ARMSv2.Utils
@model ARMSv2.Models.AdminUnits.EditDepartment

@{
    ViewBag.Title = "Ndejje University Records Management System";
    var facultyOptions = ViewBag.FacultyOptions as List<SelectListItem>;
}
<div class="">

    <h2 class="greyHeader">
        Add/Edit

        @if (!String.IsNullOrEmpty(Model.DepartmentCoreName))
        {
            <span> @Model.DepartmentCoreName</span>
        }
        else
        {
            <span> Department </span>
        }
    </h2>
    <br />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>Program Details</h4>*@


            <div>
                @Html.Raw(Html.UnEncodedValidationSummary())
            </div>
            <div class="form-group">
                <span class="col-md-3 control-label">Department</span>
                <div class="col-md-9 ">
                    @Html.DropDownWithModelSelectable(m => m.DepartmentCoreId, Model.DepartmentCores,
             new SelectListItem() { Text = "-- Select Department Component -- ", Value = "0" }, new { @class = "form-control addControl chosen-select", @id = "drpdwndepartmentlist" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FacultyId, new { @class = "control-label col-md-3" })

                <div class="col-md-6 ">
                    @Html.DropDownWithModelSelectable(m => m.FacultyId, facultyOptions, new SelectListItem() { Text = "-- Select Faculty Component --", Value = "0" }, new { @class = "form-control addControl chosen-select", id = "drpdwn-facultycampus-options" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Description, new { @class = "col-md-3 control-label" })
                <div class="col-md-9 ">
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                </div>
            </div>

            <div class="col-md-3"></div>
            <div class="col-md-9 noMarginCol2">

                @if (Model.Id == 0)
                {
                    <div class="">
                        <input type="submit" value="Create" class="btn saveBtn" />
                        <input type="button" value="Cancel"
                               onclick="javascript: cancelSubmission('@Url.Action("Departments", "AdministrativeUnits", null)');" class="btn delBtn" />
                    </div>

                    <div class="clearfix"></div>

                    <br />

                }
                else
                {
                    <div class="pull-right">
                        <input type="submit" value="Update" class="btn saveBtn" />
                        <input type="button" value="Cancel"
                               onclick="javascript: cancelSubmission('@Url.Action("ViewDepartment", "AdministrativeUnits", new { id = Model.Id })');" class="btn delBtn" />
                    </div>

                    <div class="clearfix"></div>
                    <br />

                }
            </div>




        </div>

        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(m => m.FacultyId)
        @Html.HiddenFor(m => m.ContactOwnerId)
        @Html.HiddenFor(m => m.DepartmentCoreId)
    }
</div>











