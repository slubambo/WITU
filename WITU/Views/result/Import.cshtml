@model WITU.Models.Result.ImportSelector

@{
    ViewBag.Title = "Import Results";
    Html.EnableClientValidation();
}

<div>
    <h2 class="blueHeader">Import Results</h2>
    <p class="well-sm">
        Step One: Select course and upload the Spreadsheet. <em>All Fields are relevant.</em>
    </p>
    
    @using (Html.BeginForm("Import", "Result", null, FormMethod.Post,
        new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
        
            <div>
                @Html.Raw(Html.UnEncodedValidationSummary())
            </div>

            @Html.EditorFor(m => m.CourseProgramSelectItem)

            <div class="form-group col-md-12">
                @Html.LabelFor(m => m.AcademicYearId, new {@class = "col-md-4 control-label"})
                <div class="col-md-8">
                    @Html.DropDownWithModelSelectable(m => m.AcademicYearId, Model.AcademicYearOptions,
                        Model.CourseProgramSelectItem.YearSemesterPogramSelectItem.ProgramSelectItem.AdministrativeSelectItem.DefaultFirstItem,
                        new {@class = "form-control", id = "drpdwn-academic-year"})
                    <small><em>The academic year when the course was done.</em></small>
                </div>
            </div>
            <div class="form-group col-md-12">
                @Html.LabelFor(m => m.SemesterToUse, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.DropDownWithModelSelectable(m => m.SemesterToUse, Model.SemesterToUseOptions,
                        Model.CourseProgramSelectItem.YearSemesterPogramSelectItem.ProgramSelectItem.AdministrativeSelectItem.DefaultFirstItem,
                        new { @class = "form-control", id = "drpdwn-semestercourse-done" })
                    <small><em>The semester when the course was done.</em></small>
                </div>
            </div>
            <div class="form-group col-md-12">
                @Html.LabelFor(m => m.ExcelFle, new { @class = "col-md-4 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(x => x.ExcelFle, new { @class = "", @type = "file" })
                </div>
                @*@if (Model.DefaultImageFilelName != null)
            {
                <div class="col-md-4">
                    <span>Current Photo:</span>
                    <br />
                    <img class="img img-responsive" src="@Url.Content(WebConfigurationManager.AppSettings["InformationDeskResourcesUrl"] + @Model.DefaultImageFilelName)" />
                </div>
            }*@
            </div>
            <div class="pull-right">
                @*<input type="submit" value="Save" class="btn saveBtn" />*@
                <button type="submit" class="btn saveBtn">
                    Next
                    <span class="glyphicon glyphicon-chevron-right"></span>
                </button>
                @*<input type="button" value="Cancel"
                   onclick="javascript: cancelSubmission('@Url.Action("GeneralInformation", "InformationDesk", new {id = Model.Id})');" class="btn delBtn" />*@
            </div>
        </div>
    }
</div>

@Scripts.Render("~/bundles/jqueryval")