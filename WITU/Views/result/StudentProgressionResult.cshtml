@using WITU.Core.Model
@model WITU.Models.Result.StudentProgressionResult
@using WITU.Utils
@using WITU.Models.UserManagement
@{ var sessionDetails = (SessionUserManagementDetails)HttpContext.Current.Session["LoggedInUserRoles"]; }
@{
    ViewBag.Title = "Student's Progression";
}

<div class="col-md-12">
    
    <hgroup>
        <h2 class="blueHeader">@Model.Student.Person.FullName - @Model.Student.RegistrationNumber</h2>
        <h3>@Model.Student.ProgramName - @Model.Student.Program.StartAcademicYear.Name</h3>
        <h4>Student's Progression</h4>
    </hgroup>
    
    <div class="well col-md-12">
        <div class="col-md-12">
            <div class="col-md-6">
                <label>Current Status: </label>
                <span>@Html.DisplayEnumFor(m => m.CurrentStudentStatus, typeof(StudentStatus))</span>
            </div>
            @*<div class="col-md-4">
                @if (!Student.ManualStudentStatuses.Contains(Model.CurrentStudentStatus))
                {
                    @Html.ActionLink("Update Status", "UpdateStudentStatus", new {studentId = Model.Student.Id}, new {@class = "btn btn-default"})
                }

                else if (Student.ReActivatableStudentStatuses.Contains(Model.CurrentStudentStatus))
                {

                    var latestSp = Model.Student.StudentProgressions.OrderByDescending(z => z.Semester.StartDate).FirstOrDefault();
                    int? spId = null;
                    if (latestSp != null)
                    {

                        spId = latestSp.Id;
                    }

                    @Html.ActionLink("Re-Activate Student", "UpdateStudentStatus", new { studentId = Model.Student.Id, progression = spId }, 
                        new {@class = "btn btn-default"});
                }
            </div>*@
            <div class="col-md-offset-2"></div>

            @if (Model.LatestResultDetail != null)
            {
                <hr/>
                <div class="col-md-3">
                    <strong>CTCUs: </strong> @Model.LatestResultDetail.StudentResultSummary.CumulativeTotatlCreditUnits
                </div>
                <div class="col-md-3">
                    <strong>GPA: </strong> @Model.LatestResultDetail.StudentResultSummary.GradePointAverage
                </div>
                <div class="col-md-3">
                    <strong>CGPA: </strong> @Model.LatestResultDetail.StudentResultSummary.CumulativeGradePointAverage
                </div>
                <div class="col-md-3">
                    <strong>Award: </strong> @Model.LatestResultDetail.StudentResultSummary.Award
                </div>
                <div class="col-md-12">
                    <strong>Remark: </strong> @Model.LatestResultDetail.StudentResultSummary.Remark
                </div>
                <div class="col-md-12">
                    <strong>Minimum Graduation Load: </strong> @Model.Student.Program.MinimumLoad
                </div>
            }
        </div>
    </div>
    
    <a class="btn btn-default btn-sm" href="@Url.Action("ProgressionStudents", "Result", routeValues:Model.RouteObject)">
        <span class="glyphicon glyphicon-chevron-left"></span>
        Back to Progression
    </a>

    <div class="pull-right voffset1 btn-group btn-group-sm">
        @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int) WITU.Models.ServiceDetail.EditResults
                                                                                 && (x.Role.CanCreate == true || x.Role.CanUpdate == true)))
        {
            <button id="btn-edit-course" class="btn btn-default btn-sm btn-single-select">
                <span class="fa fa-pencil-square-o"></span>
                Edit
            </button>
        }
        @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int)WITU.Models.ServiceDetail.EditResults
                                                                                 && (x.Role.CanDelete == true || x.Role.CanUpdate == true)))
{
            <button id="btn-delete-courses" class=" btn btn-default btn-sm btn-multiselect">
                <span class="glyphicon glyphicon-remove"></span>
                Delete
            </button>
        }
        @*<a class="btn btn-default btn-sm" href="@Url.Action("PrintStudentResult", new {studentId = Model.Student.Id})" target="_blank">
            <span class="fa fa-download"></span>
            @if (Model.Student.StudentStatus == StudentStatus.Graduated
                 && sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int) WITU.Models.ServiceDetail.Transcript
                                                                                        && (x.Role.CanRead == true)))
            {
                <span>Transcript</span>
            }
            else
            {
                if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int) WITU.Models.ServiceDetail.Testimonial
                                                                                        && (x.Role.CanRead == true)))
                {
                    <span>Testimonial</span>
                }
            }
            <span class="fa fa-file-pdf-o"></span>
        </a>*@
        @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int)WITU.Models.ServiceDetail.StudentResults
                                                          && (x.Role.CanCreate == true || x.Role.CanDelete == true || x.Role.CanRead == true || x.Role.CanUpdate == true)))
            {
                <a class="btn btn-default btn-sm" href="@Url.Action("PrintStudentResult", new {studentId = Model.Student.Id})" target="_blank">
                    <span class="fa fa-download"></span>
                    <span>Result Slip</span>
                    <span class="fa fa-file-pdf-o"></span>
                </a>
            }
            @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int) WITU.Models.ServiceDetail.Testimonial
                                                                                     && (x.Role.CanCreate == true || x.Role.CanDelete == true || x.Role.CanRead == true || x.Role.CanUpdate == true)))
            {
                <a class="btn btn-default btn-sm" href="@Url.Action("PrintStudentTestimonial", new {studentId = Model.Student.Id})" target="_blank">
                    <span class="fa fa-download"></span>
                    <span>Testimonial</span>
                    <span class="fa fa-file-pdf-o"></span>
                </a>
            }
            @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int)WITU.Models.ServiceDetail.Transcript
                                                          && (x.Role.CanCreate == true || x.Role.CanDelete == true || x.Role.CanRead == true || x.Role.CanUpdate == true)) && Model.Student.StudentStatus == StudentStatus.Graduated)
            {
            <a class="btn btn-default btn-sm" href="@Url.Action("PrintStudentTranscript", new {studentId = Model.Student.Id})" target="_blank">
                <span class="fa fa-download"></span>
                <span>Transcript</span>
                <span class="fa fa-file-pdf-o"></span>
            </a>
            }
    </div>

    <div class="tabs col-md-12 voffset2">
        <ul class="nav nav-pills programUl">
            @for (var i = 1; i <= Model.NumberOfYears; i++)
            {
                <li><a role="tab" data-toggle="tab" href="#tab-student-progression-body-@i">Year @i</a></li>
            }
        </ul>
        @for (var i = 1; i <= Model.NumberOfYears; i++)
        {
            <div id="tab-student-progression-body-@i">
                @for (var j = 1; j <= 2; j++)
                {
                    var semesterResultDetail = Model.SemesterResultDetails.FirstOrDefault(x => x.SemesterLevel.Level == i && x.SemesterLevel.SemesterSession == j);
                    var semLevel = Model.SemesterLevels.FirstOrDefault(x => x.Level == i && x.SemesterSession == j);
                    
                    <div class="col-md-12 row">
                        <h4 class="col-md-6">Semester @j</h4>
                        <div class="col-md-6">
                            @if (semesterResultDetail != null && !Student.ManualStudentStatuses.Contains(Model.CurrentStudentStatus))
                            {
                                <a class="pull-right btn btn-default " href="@Url.Action("AddStudentCourse",
                                                                                 new
                                                                                 {
                                                                                     studentId = Model.Student.Id,
                                                                                     semLevel = semLevel != null ? semLevel.Id : 0,
                                                                                     semesterId = semesterResultDetail.Semester.Id
                                                                                 })">
                                    <span class="glyphicon glyphicon-plus"></span>
                                    Add Course
                                </a>
                            }
                        </div>
                    </div>

                    if (semesterResultDetail != null)
                    {
                        @Html.Partial("_SemesterResultDetail", semesterResultDetail)
                    }

                    else
                    {
                        <div>
                            <div class="text-center">
                                <span class="fa fa-5x fa-warning"></span>
                            </div>
                            <div class="text-center">
                                No Records for this semester.
                            </div>
                        </div>
                    }

                    <hr />
                }
            </div>
        }

    </div>
    
    

    <div class="col-md-12 voffset1">
        
    </div>
    
    

</div>