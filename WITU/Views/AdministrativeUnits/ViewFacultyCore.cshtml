@using WITU.Core.Model
@using WITU.Utils
@using WITU.Models.UserManagement
@{ var sessionDetails = (SessionUserManagementDetails)HttpContext.Current.Session["LoggedInUserRoles"]; }
@model WITU.Models.AdminUnits.FacultyCoreView

@{
    ViewBag.Title = Model.FacultyCore.Name;
}


<h3 class="greyHeader nomargin">@Model.FacultyCore.Name</h3>
<div class="row row-top">


    <div class="col-md-8">

        <div class="">
            <span class="glyphicon glyphicon-map-marker"></span>
            <label>Faculty Location(s): @string.Join(" , ",Model.FacultyCore.Faculties.Select(a => a.Campus.Name ).Distinct()) </label>
        </div>

        
        <div class="clearfix"></div>
        <br />

@if (Request.IsAuthenticated)
{
    if (User.ApplicationUserType() == (int) UserTypes.Staff)
    {
        <div class="progCoreBtns">
            @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int) WITU.Models.ServiceDetail.Faculty
                                                                                     && (x.Role.CanCreate == true || x.Role.CanUpdate == true || x.Role.CanDelete == true)))
            {
                @Html.ActionLink("Edit Faculty", "AddOrEditFacultyCore", "AdministrativeUnits", new {id = Model.FacultyCore.Id}, new {@class = "btn saveBtn"})
            }
            @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int)WITU.Models.ServiceDetail.Campus
                                                                                     && (x.Role.CanCreate == true || x.Role.CanUpdate == true || x.Role.CanDelete == true)))
            {
                @Html.ActionLink("Add Faculty to a Campus", "AddorEditFaculty", "AdministrativeUnits", new {facultyCoreId = Model.FacultyCore.Id}, new {@class = "btn leftBtn delBtn"})
            }
                </div>
        <div class="clearfix"></div>
    }
}
    </div>

    <div class="col-md-3">

        <div class="panel panel-primary">
            <div class="panel-heading">
                Campuses With this Faculty
            </div>
            <ul class="list-group">
                @if (Model.FacultyCore.Faculties.Any())
                {
                    foreach (var fac in Model.FacultyCore.Faculties)
                    {
                        <li class="list-group-item">
                            <label class="text">@fac.Campus.Name</label><div class="clearfix"></div>
                            @Html.ActionLink("Details", "ViewCampus", "AdministrativeUnits", new { id = fac.Campus.Id }, new { @class = "linkBtn noborder" })
                        </li>
                    }
                }
                else
                {
                    <li class="list-group-item"><em>No Campuses with this faculty.</em></li>
                }


            </ul>

        </div>
        <div class="progCoreBtns noMarginCol">
            @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int) WITU.Models.ServiceDetail.Faculty
                                                                                     && (x.Role.CanCreate == true || x.Role.CanUpdate == true || x.Role.CanDelete == true)))
            {
                @Html.ActionLink("Edit Faculty", "AddOrEditFacultyCore", "AdministrativeUnits", new {id = Model.FacultyCore.Id}, new {@class = "btn saveBtn"})
            }
            @if (sessionDetails != null && sessionDetails.LoggedInUserRoles.Any(x => x.Role.Service.Id == (int)WITU.Models.ServiceDetail.Campus
                                                                                     && (x.Role.CanCreate == true || x.Role.CanUpdate == true || x.Role.CanDelete == true)))
            {
                @Html.ActionLink("Add Faculty to a Campus", "AddorEditFaculty", "AdministrativeUnits", new {facultyCoreId = Model.FacultyCore.Id}, new {@class = "btn leftBtn delBtn"})
            }
                </div>
        <div class="clearfix"></div>

    </div>
</div>

